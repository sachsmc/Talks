dendeath2
colnames(dendeath2) <- toupper(colnames(dendeath2))
dendeath2
colnames(dendeath2)[1:4] <- toupper(colnames(dendeath2))[1:4]
dendeath1 <- data.table(import(file.path(denpath, "cause_of_death1970_2001_se.sas7bdat")))
dendeath2 <- data.table(import(file.path(denpath, "cause_of_death2002_2011_se.sas7bdat")))
colnames(dendeath2)[1:4] <- toupper(colnames(dendeath2))[1:4]
dendeath <- rbind(dendeath1, dendeath2)
dendeath
dcrc.death <- cbind(dendeath, crc.death.any = rowSums(dendeath[, lapply(.SD, function(x) grepl(crc.codes, x)), .SDcols = C_DOD1:C_DOD4]) > 0,
crc.death.primary = grepl(crc.codes, dendeath$C_DOD1))
dcrc.death
table(dcrc.death$crc.death.any)
table(dcrc.death$crc.death.primaryh)
table(dcrc.death$crc.death.primary)
denmark.cases
dibd.set
denmark.cases <- merge(denmark.cases, dibd.set, by = "id", all.x = TRUE, all.y = FALSE)
denmark.cases
denmark.set <- dibd.set[strata %in% denmark.cases$strata]
denmark.set
denmark.cases[, , drop = strata]
denmark.controls <- dibd.set[strata %in% denmark.cases$strata][case == 0]
denmark.controls
denmark.cases <- merge(denmark.cases, dcrc.death, by = "id", all.x = TRUE, all.y = FALSE)
denmark.cases
denmark.controls <- merge(denmark.controls, dcrc.death, by = "id", all.x = TRUE, all.y = FALSE)
denmark.controls
library(survival)
library(broom)
denmark.cases
denmark.cases[, event := as.factor(ifelse(dead == 0, "censored", ifelse(crc.death.any, "crc death", "other death")))]
denmark.cases[, event := as.factor(ifelse(dead == 0, "censored", ifelse(crc.death.any, "crc death", "other death")))]
dc.fit <- survfit(Surv((as.numeric(statusdato) - diag_date) / 365.25, event) ~ 1, data = denmark.cases)
dc.fit
plot(dc.fit)
dc.fit <- survfit(Surv((as.numeric(statusdato) - diag_date) / 365.25, event) ~ 1, data = denmark.cases[as.numeric(statusdato > diag_date)])
plot(dc.fit)
dc.fit <- survfit(Surv((as.numeric(statusdato) - diag_date) / 365.25, event) ~ 1, data = denmark.cases[as.numeric(statusdato) > diag_date])
plot(dc.fit)
denmark.controls
denmark.controls[, event := as.factor(ifelse(dead == 0, "censored", ifelse(crc.death.any, "crc death", "other death")))]
dco.fit <- survfit(Surv((statusdato - indexdate) / 365.25, event) ~ 1, data = denmark.controls[statusdato > indexdate])
dco.fit
plot(dco.fit)
sweden.cases
sweden.cases.death
sweden.controls.death
sweden.controls.death[, event := as.factor(ifelse(is.na(deathdate), "censored", ifelse(crc.death.any.cause, "crc death", "other death")))]
sweden.cases.death[, end.date := pmin(date_1st_emig, deathdate, as.numeric(as.Date("2016-12-31")), na.rm = TRUE)]
sweden.cases.death
sweden.controls.death[, end.date := pmin(date_1st_emig, deathdate, date.control.becomes.case, as.numeric(as.Date("2016-12-31")), na.rm = TRUE)]
sweden.controls.death[, end.date := pmin(deathdate, date.control.becomes.case, as.numeric(as.Date("2016-12-31")), na.rm = TRUE)]
sc.fit <- survfit(Surv((end.date - diag.date) / 365.25, event) ~ 1, data = sweden.cases.death[end.date > diag.date])
sweden.cases.death[, event := as.factor(ifelse(is.na(deathdate), "censored", ifelse(crc.death.any.cause, "crc death", "other death")))]
sweden.cases.death[, end.date := pmin(date_1st_emig, deathdate, as.numeric(as.Date("2016-12-31")), na.rm = TRUE)]
sweden.controls.death[, event := as.factor(ifelse(is.na(deathdate), "censored", ifelse(crc.death.any.cause, "crc death", "other death")))]
sweden.controls.death[, end.date := pmin(deathdate, date.control.becomes.case, as.numeric(as.Date("2016-12-31")), na.rm = TRUE)]
sc.fit <- survfit(Surv((end.date - diag.date) / 365.25, event) ~ 1, data = sweden.cases.death[end.date > diag.date])
sco.fit <- survfit(Surv((end.date - as.numeric(date_match)) / 365.25, event) ~ 1, data = sweden.controls.death[end.date > as.numeric(date_match)])
sco.fit
plot(sco.fit)
d1 <- tidy(dc.fit)
d1
head(d1)
d1 <- cbind(subset(tidy(dc.fit), state = "crc death"), country = "Denmark", case = "IBD")
head(d1)
d1 <- rbind(cbind(subset(tidy(dc.fit), state = "crc death"), country = "Denmark", case = "IBD"),
cbind(subset(tidy(dco.fit), state = "crc death"), country = "Denmark", case = "reference"),
cbind(subset(tidy(sc.fit), state = "crc death"), country = "Sweden", case = "IBD"),
cbind(subset(tidy(sco.fit), state = "crc death"), country = "Sweden", case = "reference"))
library(ggplot2)
ggplot(d1, aes(x = time, y = estimate, color = case)) + geom_line() + facet_wrap(~ country)
d1 <- rbind(cbind(subset(tidy(dc.fit), state == "crc death"), country = "Denmark", case = "IBD"),
cbind(subset(tidy(dco.fit), state == "crc death"), country = "Denmark", case = "reference"),
cbind(subset(tidy(sc.fit), state == "crc death"), country = "Sweden", case = "IBD"),
cbind(subset(tidy(sco.fit), state == "crc death"), country = "Sweden", case = "reference"))
library(ggplot2)
ggplot(d1, aes(x = time, y = estimate, color = case)) + geom_line() + facet_wrap(~ country)
ggplot(d1, aes(x = time, y = estimate, color = case)) + geom_line(size = 2) + facet_wrap(~ country)
dibd.set
denmark.controls
denmark.case
denmark.cases
library(DBI)
library(RSQLite)
library(dplyr)
library(dbplyr)
library(data.table)
library(rio)
ibdb <- dbConnect(SQLite(), "C:/Users/micsac/Desktop/linkage-copy/ibd-linkage-2018.sqlite")
pathoibd <- data.table(dbGetQuery(ibdb, "select * from pathology where (regexp('^T6[7-8]', TOPO) AND regexp('^M4[1-4|63|7]', SNOMED)) OR
(regexp('^D62[14|16|55]', SNOMED))"))
pathoibd[, path_date := as.Date(D_DATE, format = "%Y%m%d")]
setkey(pathoibd, lopnr, path_date)
ibd.path.diagnosis <- pathoibd[, .(date_first_path = as.numeric(min(path_date)), year_path_ibd = as.numeric(format(min(path_date), "%Y")),
SNOMED = SNOMED[which.min(path_date)[1]],
TOPO = TOPO[which.min(path_date)[1]], ibd_patho = TRUE), by = lopnr]
ibd.patients <- data.table(dbGetQuery(ibdb, "select lpnr as lopnr,sex,birthyear,birthdate,date_1st_emig,date_1st_immig,Fodelselandnamn,
date_ibd_1st,date_ibd_2nd,date_cd_1st,date_cd_2nd,date_uc_1st,date_uc_2nd from ibdcases"), key = "lopnr,date_ibd_1st")
ibd.with.path <- merge(ibd.patients, ibd.path.diagnosis, by = "lopnr", all.x = TRUE)
ibd.with.path[, date_ibd_path := pmin(date_ibd_1st, date_first_path, na.rm = FALSE)]
ibd.with.path[, ":="(age_ibd_1st = as.numeric(date_ibd_1st - birthdate) / 365.25,
age_ibd_path = as.numeric(date_ibd_path - birthdate) / 365.25,
year_ibd_path = as.numeric(format(as.Date(date_ibd_path, origin = as.Date("1970-01-01")), "%Y")))]
ibd.with.path[, ":="(diag2.or.path = !is.na(age_ibd_path) | !is.na(date_ibd_2nd),
diag.date = pmin(date_ibd_1st, date_ibd_path, na.rm = TRUE),
source = "Sweden")]
sweden.cases <- ibd.with.path[diag2.or.path == TRUE]
## controls
sweden.controls <- data.table(import("K:/IBD_kes/IBD Linkage 2015/01. Processed data/02. Data/04. SCB/cases_controls.sas7bdat"))
sweden.controls <- sweden.controls[LopNrFall %in% sweden.cases$lopnr]
sweden.controls[, lopnr := LopNrKontroll]
sweden.controls <- merge(sweden.controls, sweden.cases[, .(lopnr, date.control.becomes.case = diag.date)], by = "lopnr", all.x = TRUE, all.y = FALSE)
##
swedeath <- data.table(dbGetQuery(ibdb, "select * from causesOfDeath"), key = "lopnr")
swedeath[, KAP19 := NULL]
crc.codes <- "^C(18|19|20)"
crc.codes.pre <- "^15[3-4]"
crc.death <- cbind(swedeath, crc.death.any = rowSums(swedeath[, lapply(.SD, function(x) grepl(crc.codes, x)), .SDcols = ULORSAK:MORSAK48]) > 0)
crc.death <- cbind(crc.death, crc.death2.any = rowSums(crc.death[, lapply(.SD, function(x) grepl(crc.codes.pre, x)), .SDcols = ULORSAK:MORSAK48]) > 0)
## primary cause only
crc.death <- cbind(crc.death, crc.death.prim = rowSums(crc.death[, lapply(.SD, function(x) grepl(crc.codes, x)), .SDcols = "ULORSAK"]) > 0)
crc.death <- cbind(crc.death, crc.death2.prim = rowSums(crc.death[, lapply(.SD, function(x) grepl(crc.codes.pre, x)), .SDcols = "ULORSAK"]) > 0)
crc.death[, crc.death.any.cause := crc.death.any | crc.death2.any]
crc.death[, crc.death.primary.cause := crc.death.prim | crc.death2.prim]
crc.death[nchar(DODSDAT) < 7, DODSDAT := paste0(DODSDAT, "15")]
crc.death2 <- crc.death[, .(lopnr, deathdate = as.numeric(as.Date(DODSDAT, format = "%Y%m%d")),
deathyear = AR, crc.death.any.cause, crc.death.primary.cause)]
tab22 <- table(crc.death2$lopnr)
sweden.cases.death <- merge(sweden.cases[!lopnr %in% names(tab22[tab22 > 1])], crc.death2, by = "lopnr", all.x = TRUE, all.y = FALSE)
sweden.controls.death <- merge(sweden.controls[!lopnr %in% names(tab22[tab22 > 1])], crc.death2, by = "lopnr", all.x = TRUE, all.y = FALSE)
## remove anyone with contact after deathdate
last.contact <- data.table(rbind(dbGetQuery(ibdb, "select lopnr,max(INDATUM) as `last.contact` from inpatient group by lopnr"),
dbGetQuery(ibdb, "select lopnr,max(INDATUM) as `last.contact` from outpatient group by lopnr")))[, .(last.contact = max(last.contact)), by = lopnr]
sweden.cases.death <- merge(sweden.cases.death, last.contact, by = "lopnr", all.x = TRUE, all.y = FALSE)
sweden.controls.death <- merge(sweden.controls.death, last.contact, by = "lopnr", all.x = TRUE, all.y = FALSE)
sweden.cases.death <- sweden.cases.death[is.na(deathdate) | !last.contact - 90 > deathdate]
sweden.controls.death <- sweden.controls.death[is.na(deathdate) | !last.contact - 90 > deathdate]
### denmark
denpath <- "H:/CRC collaboration/danish data"
denpatho <- data.table(import(file.path(denpath, "pathology_2013_se.sas7bdat")))
denpatho[, path.crit := grepl('^T6[7-8]', Snomed_T) & grepl('^M4[1-4|63|7]', SNOMEDcode) |
grepl('^S62[14|16|55]', SNOMEDcode)]
denpatho <- denpatho[path.crit == TRUE]
dibd.path.diagnosis <- denpatho[, .(date_first_path = as.numeric(min(modtdato)),
year_path_ibd = as.numeric(format(min(modtdato), "%Y")),
SNOMED = SNOMEDcode[which.min(modtdato)],
TOPO = Snomed_T[which.min(modtdato)],
ibd_patho = TRUE), by = id]
dibd.set <- data.table(import(file.path(denpath, "cohort1980_2013_se.sas7bdat")))
ddiag <- data.table(import(file.path(denpath, "diagnoses1977_2013.sas7bdat")))
## UC : K51
## CD : K50
## IU : K523
## C_pattype = 0 , 1 (admitted patients), 2 (ambulatory care), 3 (emergency room) C_diagtype = A (maindiagnosis) B (secondary diagnosis)
ibd.diagnoses <- ddiag[grepl("^DK5(0|1|23)", C_DIAG) == TRUE]
setkey(ibd.diagnoses, id, D_INDDTO)
numberwang <- function(date) {
ddate <- unique(date)
if(length(ddate) == 1) return(as.Date(NA))
sort(ddate)[2]
}
ibd.diag <- ibd.diagnoses[, .(date_ibd_1st = min(D_INDDTO),
date_ibd_2nd = numberwang(D_INDDTO)), by = id]
dibd.with.path <- merge(ibd.diag, dibd.path.diagnosis, by = "id", all.x = TRUE)
dibd.with.path <- dibd.with.path[!is.na(date_ibd_2nd) | !is.na(date_first_path)]
dibd.with.path[, diag_date := pmin(as.numeric(date_ibd_1st), date_first_path, na.rm = TRUE)]
dibd.with.path[, source := "Denmark"]
denmark.cases <- dibd.with.path
denmark.cases <- merge(denmark.cases, dibd.set[case == 1], by = "id", all.x = TRUE, all.y = FALSE)
### cause of death
dendeath1 <- data.table(import(file.path(denpath, "cause_of_death1970_2001_se.sas7bdat")))
dendeath2 <- data.table(import(file.path(denpath, "cause_of_death2002_2011_se.sas7bdat")))
colnames(dendeath2)[1:4] <- toupper(colnames(dendeath2))[1:4]
dendeath <- rbind(dendeath1, dendeath2)
dcrc.death <- cbind(dendeath, crc.death.any = rowSums(dendeath[, lapply(.SD, function(x) grepl(crc.codes, x)), .SDcols = C_DOD1:C_DOD4]) > 0,
crc.death.primary = grepl(crc.codes, dendeath$C_DOD1))
denmark.controls <- dibd.set[strata %in% denmark.cases$strata][case == 0]
denmark.cases <- merge(denmark.cases, dcrc.death, by = "id", all.x = TRUE, all.y = FALSE)
denmark.controls <- merge(denmark.controls, dcrc.death, by = "id", all.x = TRUE, all.y = FALSE)
library(survival)
library(broom)
denmark.cases[, event := as.factor(ifelse(dead == 0, "censored", ifelse(crc.death.any, "crc death", "other death")))]
dc.fit <- survfit(Surv((as.numeric(statusdato) - diag_date) / 365.25, event) ~ 1, data = denmark.cases[as.numeric(statusdato) > diag_date])
denmark.controls[, event := as.factor(ifelse(dead == 0, "censored", ifelse(crc.death.any, "crc death", "other death")))]
dco.fit <- survfit(Surv((statusdato - indexdate) / 365.25, event) ~ 1, data = denmark.controls[statusdato > indexdate])
denmark.cases
dibd.set
denmark.cases <- dibd.with.path
merge(denmark.cases, dibd.set[case == 1], by = "id", all.x = TRUE, all.y = FALSE)
table(dibd.set$case)
denmark.cases <- dibd.with.path
denmark.cases <- merge(denmark.cases, dibd.set[case == 0], by = "id", all.x = TRUE, all.y = FALSE)
### cause of death
colnames(dendeath2)[1:4] <- toupper(colnames(dendeath2))[1:4]
dendeath <- rbind(dendeath1, dendeath2)
dcrc.death <- cbind(dendeath, crc.death.any = rowSums(dendeath[, lapply(.SD, function(x) grepl(crc.codes, x)), .SDcols = C_DOD1:C_DOD4]) > 0,
crc.death.primary = grepl(crc.codes, dendeath$C_DOD1))
denmark.controls <- dibd.set[strata %in% denmark.cases$strata][case == 1]
denmark.cases <- merge(denmark.cases, dcrc.death, by = "id", all.x = TRUE, all.y = FALSE)
denmark.controls <- merge(denmark.controls, dcrc.death, by = "id", all.x = TRUE, all.y = FALSE)
library(survival)
library(broom)
denmark.cases[, event := as.factor(ifelse(dead == 0, "censored", ifelse(crc.death.any, "crc death", "other death")))]
dc.fit <- survfit(Surv((as.numeric(statusdato) - diag_date) / 365.25, event) ~ 1, data = denmark.cases[as.numeric(statusdato) > diag_date])
denmark.controls[, event := as.factor(ifelse(dead == 0, "censored", ifelse(crc.death.any, "crc death", "other death")))]
dco.fit <- survfit(Surv((statusdato - indexdate) / 365.25, event) ~ 1, data = denmark.controls[statusdato > indexdate])
sweden.cases.death[, event := as.factor(ifelse(is.na(deathdate), "censored", ifelse(crc.death.any.cause, "crc death", "other death")))]
sweden.cases.death[, end.date := pmin(date_1st_emig, deathdate, as.numeric(as.Date("2016-12-31")), na.rm = TRUE)]
sweden.controls.death[, event := as.factor(ifelse(is.na(deathdate), "censored", ifelse(crc.death.any.cause, "crc death", "other death")))]
sweden.controls.death[, end.date := pmin(deathdate, date.control.becomes.case, as.numeric(as.Date("2016-12-31")), na.rm = TRUE)]
sc.fit <- survfit(Surv((end.date - diag.date) / 365.25, event) ~ 1, data = sweden.cases.death[end.date > diag.date])
sco.fit <- survfit(Surv((end.date - as.numeric(date_match)) / 365.25, event) ~ 1, data = sweden.controls.death[end.date > as.numeric(date_match)])
d1 <- rbind(cbind(subset(tidy(dc.fit), state == "crc death"), country = "Denmark", case = "IBD"),
cbind(subset(tidy(dco.fit), state == "crc death"), country = "Denmark", case = "reference"),
cbind(subset(tidy(sc.fit), state == "crc death"), country = "Sweden", case = "IBD"),
cbind(subset(tidy(sco.fit), state == "crc death"), country = "Sweden", case = "reference"))
library(ggplot2)
ggplot(d1, aes(x = time, y = estimate, color = case)) + geom_line(size = 2) + facet_wrap(~ country)
denmark.cases
denmark.controls
ibd.diag
d1 <- rbind(cbind(subset(tidy(dc.fit), state == "other death"), country = "Denmark", case = "IBD"),
cbind(subset(tidy(dco.fit), state == "other death"), country = "Denmark", case = "reference"),
cbind(subset(tidy(sc.fit), state == "other death"), country = "Sweden", case = "IBD"),
cbind(subset(tidy(sco.fit), state == "other death"), country = "Sweden", case = "reference"))
library(ggplot2)
ggplot(d1, aes(x = time, y = estimate, color = case)) + geom_line(size = 2) + facet_wrap(~ country)
dibd.with.path
dibd.set
dibd.set[id %in% dibd.with.path$id]
summary(dibd.with.path)
denmark.cases[, event := as.factor(ifelse(dead == 0, "censored", ifelse(crc.death.any, "crc death", "other death")))]
dc.fit <- survfit(Surv((statusdato - indexdate) / 365.25, event) ~ 1, data = denmark.cases[as.numeric(statusdato) > diag_date])
denmark.controls[, event := as.factor(ifelse(dead == 0, "censored", ifelse(crc.death.any, "crc death", "other death")))]
dco.fit <- survfit(Surv((statusdato - indexdate) / 365.25, event) ~ 1, data = denmark.controls[statusdato > indexdate])
d1 <- rbind(cbind(subset(tidy(dc.fit), state == "crc death"), country = "Denmark", case = "IBD"),
cbind(subset(tidy(dco.fit), state == "crc death"), country = "Denmark", case = "reference"),
cbind(subset(tidy(sc.fit), state == "crc death"), country = "Sweden", case = "IBD"),
cbind(subset(tidy(sco.fit), state == "crc death"), country = "Sweden", case = "reference"))
library(ggplot2)
ggplot(d1, aes(x = time, y = estimate, color = case)) + geom_line(size = 2) + facet_wrap(~ country)
denmark.controls <- dibd.set[case == 1]
denmark.controls <- merge(denmark.controls, dcrc.death, by = "id", all.x = TRUE, all.y = FALSE)
denmark.controls[, event := as.factor(ifelse(dead == 0, "censored", ifelse(crc.death.any, "crc death", "other death")))]
dco.fit <- survfit(Surv((statusdato - indexdate) / 365.25, event) ~ 1, data = denmark.controls[statusdato > indexdate])
d1 <- rbind(cbind(subset(tidy(dc.fit), state == "crc death"), country = "Denmark", case = "IBD"),
cbind(subset(tidy(dco.fit), state == "crc death"), country = "Denmark", case = "reference"),
cbind(subset(tidy(sc.fit), state == "crc death"), country = "Sweden", case = "IBD"),
cbind(subset(tidy(sco.fit), state == "crc death"), country = "Sweden", case = "reference"))
library(ggplot2)
ggplot(d1, aes(x = time, y = estimate, color = case)) + geom_line(size = 2) + facet_wrap(~ country)
dibd.set
teef <- survfit(Surv(statusdato - indexdate, dead) ~ case, data = dibd.set)
plot(teef, col = 1:2)
teef
summary(teef)
teef <- survfit(Surv(statusdato - indexdate, dead == 1) ~ case, data = dibd.set)
plot(teef, col = 1:2)
dibd.set
denmark.controls[id == 180873]
dtest <- merge(dibd.set, dcrc.death, by = "id", all.x = TRUE)
dtest
dtest[, event := as.factor(ifelse(dead == 0, "censored", ifelse(crc.death.any, "crc death", "other death")))]
teef <- survfit(Surv(statusdato - indexdate, event) ~ case, data = dtest)
plot(teef, col = 1:2, lty = 1:2)
teef
summary(teef)
tes1 <- tidy(teef)
head(tes1)
ggplot(tes1, aes(x = time, y = estimate, color = strata)) + geom_line() + facet_wrap(~ state)
d1 <- rbind(cbind(subset(tidy(dc.fit), state == "crc death"), country = "Denmark", case = "IBD"),
cbind(subset(tidy(dco.fit), state == "crc death"), country = "Denmark", case = "reference"),
cbind(subset(tidy(sc.fit), state == "crc death"), country = "Sweden", case = "IBD"),
cbind(subset(tidy(sco.fit), state == "crc death"), country = "Sweden", case = "reference"))
library(ggplot2)
ggplot(d1, aes(x = time, y = estimate, color = case)) + geom_line(size = 2) + facet_wrap(~ country)
ggplot(tes1, aes(x = time, y = estimate, color = strata)) + geom_line() + facet_wrap(~ state, scales = "free")
dibd.set
setkey(dibd.set, id)
dibd.set
ibd.diag[id %in% 1:5]
dcanc <- data.table(import(file.path(dpath, "cancer1943_2013_se.sas7bdat")))
dcanc <- data.table(import(file.path(denpath, "cancer1943_2013_se.sas7bdat")))
dcanc
dcrc <- dcanc[grepl(crc.codes, C_ICD10) == TRUE]
dcrc
table(table(dcrc$id))
dcrc[, .(canc.date = min(D_DIAGNOSEDATO)), by = id]
dcrc <- dcrc[, .(canc.date = min(D_DIAGNOSEDATO)), by = id]
teef2 <- merge(dibd.set, dcrc, by = "id", all.x = TRUE, all.y = FALSE)
teef2
teef2[, crc.date := pmin(canc.date, statusdato, na.rm = TRUE)]
teef <- survfit(Surv(crc.date - indexdate, !is.na(canc.date)) ~ case, data = teef2)
plot(teef, col = 1:2)
teef <- survfit(Surv(crc.date - indexdate, !is.na(canc.date)) ~ case, data = teef2[canc.date > indexdate])
plot(teef, col = 1:2)
teef2
teef <- survfit(Surv(crc.date - indexdate, !is.na(canc.date)) ~ case, data = teef2[crc.date > indexdate])
teef
summary(teef)
plot(teef, col = 1:2)
plot(teef, col = 1:2, ylim = c(.9, 1))
teef
ggplot(tidy(teef), aes(x = time, y = estimate, color = strata)) + geom_line()
denmark.cases[as.numeric(statusdato) > diag_date]
denmark.cases[is.na(crc.death.any), crc.death.any := FALSE]
denmark.cases[, event := as.factor(ifelse(dead == 0, "censored", ifelse(crc.death.any, "crc death", "other death")))]
dc.fit <- survfit(Surv((statusdato - indexdate) / 365.25, event) ~ 1, data = denmark.cases[as.numeric(statusdato) > diag_date])
denmark.controls[is.na(crc.death.any), crc.death.any := FALSE]
denmark.controls[, event := as.factor(ifelse(dead == 0, "censored", ifelse(crc.death.any, "crc death", "other death")))]
dco.fit <- survfit(Surv((statusdato - indexdate) / 365.25, event) ~ 1, data = denmark.controls[statusdato > indexdate])
sweden.cases.death[, event := as.factor(ifelse(is.na(deathdate), "censored", ifelse(crc.death.any.cause, "crc death", "other death")))]
sweden.cases.death[, end.date := pmin(date_1st_emig, deathdate, as.numeric(as.Date("2016-12-31")), na.rm = TRUE)]
sweden.controls.death[, event := as.factor(ifelse(is.na(deathdate), "censored", ifelse(crc.death.any.cause, "crc death", "other death")))]
sweden.controls.death[, end.date := pmin(deathdate, date.control.becomes.case, as.numeric(as.Date("2016-12-31")), na.rm = TRUE)]
sc.fit <- survfit(Surv((end.date - diag.date) / 365.25, event) ~ 1, data = sweden.cases.death[end.date > diag.date])
sco.fit <- survfit(Surv((end.date - as.numeric(date_match)) / 365.25, event) ~ 1, data = sweden.controls.death[end.date > as.numeric(date_match)])
d1 <- rbind(cbind(subset(tidy(dc.fit), state == "crc death"), country = "Denmark", case = "IBD"),
cbind(subset(tidy(dco.fit), state == "crc death"), country = "Denmark", case = "reference"),
cbind(subset(tidy(sc.fit), state == "crc death"), country = "Sweden", case = "IBD"),
cbind(subset(tidy(sco.fit), state == "crc death"), country = "Sweden", case = "reference"))
ggplot(d1, aes(x = time, y = estimate, color = case)) + geom_line(size = 2) + facet_wrap(~ country)
dc.fit
dco.fit
d1 <- rbind(cbind(subset(tidy(dc.fit), state == "other death"), country = "Denmark", case = "IBD"),
cbind(subset(tidy(dco.fit), state == "other death"), country = "Denmark", case = "reference"),
cbind(subset(tidy(sc.fit), state == "other death"), country = "Sweden", case = "IBD"),
cbind(subset(tidy(sco.fit), state == "other death"), country = "Sweden", case = "reference"))
library(ggplot2)
ggplot(d1, aes(x = time, y = estimate, color = case)) + geom_line(size = 2) + facet_wrap(~ country)
d1 <- rbind(cbind(subset(tidy(dc.fit), state == "crc death"), country = "Denmark", case = "IBD"),
cbind(subset(tidy(dco.fit), state == "crc death"), country = "Denmark", case = "reference"),
cbind(subset(tidy(sc.fit), state == "crc death"), country = "Sweden", case = "IBD"),
cbind(subset(tidy(sco.fit), state == "crc death"), country = "Sweden", case = "reference"))
library(ggplot2)
ggplot(d1, aes(x = time, y = estimate, color = case)) + geom_line(size = 2) + facet_wrap(~ country)
library(DBI)
library(RSQLite)
library(dplyr)
library(dbplyr)
library(data.table)
library(rio)
oldslut <- import("K:/IBD_kes/IBD Linkage 2015/02. Raw data/02. Data/01. Socialstyrelsen/SoS_Delivery_Mega-linkage_151012/Totalt/PATIENTREG/patient_sluten.sas7bdat")
z<-rep(c(0,1),50)
y<-rnorm(100,2,1)
x<-rnorm(100,2,1)
mean(y[z==1])-mean(y[z==0])
var(y[z==1])/50+var(y[z==0])/50+2*cov(y[z==1], y[z==0])
q<-2*z*y-2*(1-z)*y
mean(q)
var(q)/100
cov(y[z==1], y[z==0])
var(y[z==1])/50+var(y[z==0])/50
var(q)/100
q<- z*y-(1-z)*y
mean(q)
var(q)/100
2
q<-2*z*y-2*(1-z)*y
mean(q)
mean(y[z==1])-mean(y[z==0])
q<- y^z - y^(1-z)
mean(q)
mean(y[z==1])-mean(y[z==0])
y[z==1]
sum(y[z==1])/100 - sum(y[z==0])/100
sum(y[z==1])/50 - sum(y[z==0])/50
var(y[z==1])/50 + var(y[z==0])/50
q<- y^z - y^(1-z)
mean(q)
q<- 2 * y^z - 2 * y^(1-z)
mean(q)
sum(y[z==1])/50 - sum(y[z==0])/50
var(q)/100
var(q)/400
var(q)/200
devtools::install_github("xihui/xaringan")
devtools::install_github("yihui/xaringan")
r xaringan:::karl
xaringan:::karl
xaringan:::karl
xaringan:::karl
library(DiagrammeR)
install.packages("DiagrammeR")
2 / 333
101 / 6000
citation()
library(ggdag)
install.packages("ggdag")
library(ggdag)
library(ggdag)
myd <- dagify(genes ~ activity,
ancestry ~ genes,
ancestry ~ activity,
genes ~ baseobesity,
baseobesity ~ obesitychange,
activity~ obesitychange,
confound ~ activity,
confound ~ obesitychange)
ggdag(myd)
myd <- dagify(activity ~ genes,
genes ~ancestry,
activity ~ancestry,
baseobesity ~genes,
obesitychange ~baseobesity,
obesitychange ~activity,
activity ~confound,
obesitychange ~confound)
ggdag(myd, use_labels = "label")
ggdag(myd, text = FALSE)
ggdag(myd)
myd <- dagify(obesitychange ~baseobesity,
obesitychange ~activity,
activity ~confound,
obesitychange ~confound,
activity ~ genes,
genes ~ancestry,
activity ~ancestry,
baseobesity ~genes
)
ggdag(myd)
myd <- dagify(obesitychange ~baseobesity,
obesitychange ~activity,
activity ~confound,
obesitychange ~confound,
activity ~ genes,
genes ~ancestry,
activity ~ancestry,
baseobesity ~genes,
labels = c(obesitychange = "Change in adiposity", baseobesity = "Baseline adiposity",
activity = "Activity/Sleep", confound = "Confounders (e.g., diet)", genes = "Genetic predictors",
ancestry = "Parental genes")
)
ggdag(myd, text = FALSE, use_labels = "labels")
myd <- dagify(obesitychange ~baseobesity,
obesitychange ~activity,
activity ~confound,
obesitychange ~confound,
activity ~ genes,
genes ~ancestry,
activity ~ancestry,
baseobesity ~genes,
label = c(obesitychange = "Change in adiposity", baseobesity = "Baseline adiposity",
activity = "Activity/Sleep", confound = "Confounders (e.g., diet)", genes = "Genetic predictors",
ancestry = "Parental genes")
)
ggdag(myd, text = FALSE, use_labels = "label")
ci <- c(7,
19,
39,
38,
61,
64,
86,
107)
year <- 2011:2018
library(ggplot2)
ggplot(data.frame(ci, year), aes(x = year, y = ci)) + geom_bar(fill = "#870052") + theme_bw() +
xlab("Year") + ylab("Number of citations")
ggplot(data.frame(ci, year), aes(x = year, y = ci)) + geom_bar(fill = "#870052", stat = "identity") + theme_bw() +
xlab("Year") + ylab("Number of citations")
ggplot(data.frame(ci, year), aes(x = year, y = ci)) + geom_bar(color = "black", fill = "#870052", stat = "identity") + theme_bw() +
xlab("Year") + ylab("Number of citations")
ggsave("citations.png", width = 4, height = 3, units = "in")
ggplot(data.frame(ci, year), aes(x = year, y = ci)) +
geom_bar(color = "black", fill = "#870052", stat = "identity") + theme_bw() +
xlab("Year") + ylab("Number of citations") + scale_x_continuous(breaks = year)
ggsave("citations.png", width = 4, height = 3, units = "in")
library(plotROC)
?geom_roc
D.ex <- rbinom(50, 1, .5)
rocdata <- data.frame(D = c(D.ex, D.ex),
M = c(rnorm(50, mean = D.ex, sd = .4), rnorm(50, mean = D.ex, sd = 1)),
Z = c(rep("A", 50), rep("B", 50)))
g <- ggplot(rocdata, aes(m = M, d = D)) + geom_roc()
calc_auc(g)
g <- ggplot(rocdata, aes(m = M, d = D)) +geom_vline(xintercept=0,color="grey") +
geom_roc()
calc_auc(g)
calc_auc
sapply(g$layers, function(g) class(g$geom)[1])
ggplot_build(g)$data[[1]]
ggplot_build(g)$data
g <- ggplot(rocdata, aes(m = M, d = D, color  =Z)) +geom_vline(xintercept=0,color="grey") +
geom_roc()
g
g + annotate("text", x=0.6, y=0.4, label=paste("AUC =", round(calc_auc(g)$AUC, 3)),size=5)
g <- ggplot(rocdata, aes(m = M, d = D, color  =Z))  +
geom_roc()
g + annotate("text", x=0.6, y=0.4, label=paste("AUC =", round(calc_auc(g)$AUC, 3)),size=5)
g + annotate("text", aes(color = Z), x=0.6, y=0.4, label=paste("AUC =", round(calc_auc(g)$AUC, 3)),size=5)
calc_auc(g)$AUC
g + annotate("text", x=0.6, y=0.4, label=paste("AUC =", round(calc_auc(g)$AUC, 3)),size=5)
g + annotate("text", x=c(0.6,.6), y=c(.2, 0.4), label=paste("AUC =", round(calc_auc(g)$AUC, 3)),size=5)
?annotate
shiny::runApp('C:/Users/micsac/Desktop/pharma-explorer-demo')
library(plotROC)
?geom_roc
D.ex <- rbinom(50, 1, .5)
rocdata <- data.frame(D = c(D.ex, D.ex),
M = c(rnorm(50, mean = D.ex, sd = .4), rnorm(50, mean = D.ex, sd = 1)),
Z = c(rep("A", 50), rep("B", 50)))
g <- ggplot(rocdata, aes(m = M, d = D, color = Z)) + geom_roc()
aucs <- calc_auc(g)
g
aucs
g + annotate("text", x = c(.75, .75), y = c(.5, .25), label = sprintf("AUC=%.2f", aucs$AUC))
g + annotate("text", x = c(.75, .75), y = c(.5, .4), label = sprintf("AUC=%.2f", aucs$AUC))
150*2500
setwd("C:/Users/micsac/Box Sync/Teaching/Methods Club Redux/Topics/Sensitivity analysis")
